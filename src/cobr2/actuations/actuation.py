import numpy as np


class ContinuousActuation:
    """
    Classes inherited from this base class should contain parameters and
    functions that describe and calculate forces / couples generated by
    actuators.
    """

    def __init__(self, n_elements: int):
        n_dim = 3
        self.n_elements = n_elements

        self.internal_force = np.zeros((n_dim, n_elements))  # material frame
        self.internal_couple = np.zeros(
            (n_dim, n_elements - 1)
        )  # material frame

        self.equivalent_external_force = np.zeros(
            (n_dim, n_elements + 1)
        )  # lab frame
        self.equivalent_external_couple = np.zeros(
            (n_dim, n_elements)
        )  # material frame

    def reset_actuation(
        self,
    ) -> None:
        # Reset actuation forces / couples to be zero.
        self.internal_force[:, :] *= 0
        self.internal_couple[:, :] *= 0
        self.equivalent_external_force[:, :] *= 0
        self.equivalent_external_couple[:, :] *= 0
